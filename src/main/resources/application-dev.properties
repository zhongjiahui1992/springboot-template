#开发环境,生产环境在application-pro.properties中配置
###### 小程序配置 ########
wechat.miniapp.appid=wxf361b5069a33546c
wechat.miniapp.secret=df8a7dbebc1527782c9e8f4f9e9d3cdb
wechat.miniapp.token=miniapptest
wechat.miniapp.aesKey=JX7oY1mpSvAbnOQ8jUfQi5ryV6QHhkQoSYAo1OEFf6o
wechat.miniapp.msgDataFormat=JSON

###### 数据库配置 ########
spring.datasource.url=jdbc:mysql://10.0.0.250:3306/rl_base?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.config-locations=classpath*:mybatis/mybatis-config.xml
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=5000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

########## redis配置 ########
# Redis数据库索引（一般一共为16个，默认为0，即使用第一个）
#spring.jedis.database=0
## Redis服务器地址
#spring.jedis.host=10.0.6.231
## Redis服务器连接端口
#spring.jedis.port=6379
## Redis服务器连接密码（默认为空）
#spring.jedis.password=
## 连接池中的最大空闲连接(默认为8)
#spring.jedis.maxIdle=100
## 连接池中的最小空闲连接(默认为0)
#spring.jedis.minIdle=10
##连接超时时间（毫秒）
#spring.jedis.timeout=3000
## 连接池最大连接数（使用负值表示没有限制）
#spring.jedis.maxTotal= 100
## 连接池最大阻塞等待时间（毫秒）（使用负值表示没有限制）
#spring.jedis.maxWaitMillis = 100000